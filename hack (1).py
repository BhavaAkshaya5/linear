# -*- coding: utf-8 -*-
"""Hack.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Xu6kPHXiuw9onGM1Hoj7SffP-U31K13J
"""


import joblib
joblib.dump(LR, '/content/Final_scorepickle(1).pkl')

import streamlit as st
import pandas as pd
import joblib

# Load the trained model
model = joblib.load("model.pkl")  # Ensure 'model.pkl' is present in the same directory

# Streamlit page setup
st.set_page_config(
    page_title="🎓 Final Score Predictor",
    layout="centered"
)

# CSS for styling
st.markdown("""
    <style>
        body {
            background-image: url("https://images.unsplash.com/photo-1557683316-973673baf926");
            background-size: cover;
        }
        .main {
            background-color: rgba(255, 255, 255, 0.90);
            padding: 2rem;
            border-radius: 15px;
            box-shadow: 0 0 10px rgba(0,0,0,0.3);
        }
        .stButton > button {
            background-color: #0d6efd;
            color: white;
            padding: 0.5em 2em;
            border-radius: 8px;
            transition: 0.3s;
        }
        .stButton > button:hover {
            background-color: #003566;
            color: white;
        }
    </style>
""", unsafe_allow_html=True)

with st.container():
    st.markdown("<div class='main'>", unsafe_allow_html=True)

    st.title("🎓 Student Final Score Predictor")
    st.write("Fill in the details to predict the final exam score.")

    # Input fields
    name_encoded = st.number_input("👤 Encoded Name (e.g., 25)", min_value=0, max_value=100, step=1)
    study_hours = st.slider("📚 Daily Study Hours", 0, 15, 2)
    mobile_encoded = st.number_input("📱 Mobile Usage While Studying (Encoded)", min_value=0, max_value=10, step=1)
    sleep_hours = st.slider("😴 Sleep Hours Before Exam", 0, 12, 6)
    attendance_str = st.text_input("📅 Attendance Percentage (e.g., 85%)", "85%")
    doubt_encoded = st.radio("❓ Doubt Session Participation (Encoded)", [0, 1], format_func=lambda x: "Yes" if x == 1 else "No")

    try:
        # Clean and convert attendance
        attendance = float(attendance_str.strip('%'))

        # Prepare input
        input_df = pd.DataFrame([[
            name_encoded, study_hours, mobile_encoded, sleep_hours, attendance, doubt_encoded
        ]], columns=[
            'Enter_Your_Name',
            'What is the dialy hours of study?',
            'Usage of mobile phone while studying',
            'Sleep Hours before exam?',
            'Percentage of Attendance',
            'Participation in doubt sessions'
        ])

        if st.button("🎯 Predict Final Score"):
            prediction = model.predict(input_df)[0]
            st.success(f"✅ Predicted Final Score: **{prediction:.2f}**")

    except ValueError:
        st.error("⚠️ Please enter a valid percentage value for attendance.")

    st.markdown("</div>", unsafe_allow_html=True)
